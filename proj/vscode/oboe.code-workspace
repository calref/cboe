{
	"folders": [
		{
			"path": "../.."
		}
	],
	"extensions": {
		"recommendations": [
			"redhat.vscode-xml",
			"ms-vscode.cpptools",
		]
	},
	"tasks": {
		"version": "2.0.0",
		"tasks": [
			{
				"label": "Build (Debug)",
				"windows": {
					"type": "process",
					"command": "powershell",
					"args": [
						"${workspaceFolder}/proj/vscode/build.ps1",
						"/property:GenerateFullPaths=true",
						"/property:VcpkgConfiguration=Debug",
						"/t:build",
						"\"${workspaceRoot}\\proj\\vs2017\\Blades of Exile.sln\""
					],
					"problemMatcher": "$msCompile",
				},
				"group": "build"
			},
			{
				"label": "Build (Release)",
				"windows": {
					"type": "process",
					"command": "powershell",
					"args": [
						"${workspaceFolder}/proj/vscode/build.ps1",
						"/property:GenerateFullPaths=true",
						"/property:VcpkgConfiguration=Release",
						"/t:build",
						"${workspaceRoot}\\proj\\vs2013\\Blades of Exile.sln"
					],
					"problemMatcher": "$msCompile",
				},
				"group": "build"
			},
			{
				"label": "Run tests",
				"windows": {
					"type": "process",
					"command": "${workspaceRoot}\\proj\\vs2013\\Release\\OBoE Tests.exe",
					"problemMatcher": {
						"fileLocation": ["relative", "${workspaceRoot}"],
						"pattern": {
							"regexp": "^\\.(.*)\\((\\d+)\\): FAILED$",
							"file": 1,
							"line": 2
						}
					},
				},
				"options": {
					"cwd": "${workspaceRoot}/test"
				},
				"group": "test"
			}
		]
	},
	"settings": {
		"xml.fileAssociations": [
			{
				"pattern": "scenario.xml",
				"systemId": "${workspaceFolder}/rsrc/schemas/scenario.xsd"
			},
			{
				"pattern": "items.xml",
				"systemId": "${workspaceFolder}/rsrc/schemas/items.xsd"
			},
			{
				"pattern": "monsters.xml",
				"systemId": "${workspaceFolder}/rsrc/schemas/monsters.xsd"
			},
			{
				"pattern": "terrain.xml",
				"systemId": "${workspaceFolder}/rsrc/schemas/terrain.xsd"
			},
			{
				"pattern": "town\\d+.xml",
				"systemId": "${workspaceFolder}/rsrc/schemas/town.xsd"
			},
			{
				"pattern": "talk\\d+.xml",
				"systemId": "${workspaceFolder}/rsrc/schemas/dialogue.xsd"
			},
			{
				"pattern": "out\\d+~\\d+.xml",
				"systemId": "${workspaceFolder}/rsrc/schemas/outdoor.xsd"
			},
			{
				"pattern": "rsrc/dialogs/*.xml",
				"systemId": "${workspaceFolder}/rsrc/schemas/dialog.xsd"
			},
			{
				"pattern": "rsrc/scenarios/*/dialogs/*.xml",
				"systemId": "${workspaceFolder}/rsrc/schemas/dialog.xsd"
			}
		],
		"files.associations": {
			"__bit_reference": "cpp",
			"__config": "cpp",
			"__debug": "cpp",
			"__errc": "cpp",
			"__functional_base": "cpp",
			"__hash_table": "cpp",
			"__locale": "cpp",
			"__mutex_base": "cpp",
			"__node_handle": "cpp",
			"__nullptr": "cpp",
			"__split_buffer": "cpp",
			"__string": "cpp",
			"__threading_support": "cpp",
			"__tree": "cpp",
			"__tuple": "cpp",
			"algorithm": "cpp",
			"any": "cpp",
			"array": "cpp",
			"atomic": "cpp",
			"bit": "cpp",
			"bitset": "cpp",
			"cctype": "cpp",
			"cfenv": "cpp",
			"charconv": "cpp",
			"chrono": "cpp",
			"cmath": "cpp",
			"codecvt": "cpp",
			"complex": "cpp",
			"condition_variable": "cpp",
			"cstdarg": "cpp",
			"cstddef": "cpp",
			"cstdint": "cpp",
			"cstdio": "cpp",
			"cstdlib": "cpp",
			"cstring": "cpp",
			"ctime": "cpp",
			"cwchar": "cpp",
			"cwctype": "cpp",
			"deque": "cpp",
			"exception": "cpp",
			"fstream": "cpp",
			"functional": "cpp",
			"future": "cpp",
			"initializer_list": "cpp",
			"iomanip": "cpp",
			"ios": "cpp",
			"iosfwd": "cpp",
			"iostream": "cpp",
			"istream": "cpp",
			"iterator": "cpp",
			"limits": "cpp",
			"list": "cpp",
			"locale": "cpp",
			"map": "cpp",
			"memory": "cpp",
			"mutex": "cpp",
			"new": "cpp",
			"numeric": "cpp",
			"optional": "cpp",
			"ostream": "cpp",
			"queue": "cpp",
			"random": "cpp",
			"ratio": "cpp",
			"regex": "cpp",
			"set": "cpp",
			"sstream": "cpp",
			"stack": "cpp",
			"stdexcept": "cpp",
			"streambuf": "cpp",
			"string_view": "cpp",
			"string": "cpp",
			"system_error": "cpp",
			"tuple": "cpp",
			"type_traits": "cpp",
			"typeindex": "cpp",
			"typeinfo": "cpp",
			"unordered_map": "cpp",
			"unordered_set": "cpp",
			"utility": "cpp",
			"variant": "cpp",
			"vector": "cpp"
		}
	}
}